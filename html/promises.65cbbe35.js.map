{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,SAKHG,EAA5BC,iBAAiB,UAAU,SAACC,G,kBA2BC,IAAXC,EAAUC,GAAVD,EAfLE,EAAI,EAeWD,EAfRE,EAAQC,EAAOF,EAgBjC,IAAIG,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAO1CC,YAAW,WACHH,GACRF,EAAQ,CAAEN,WAAUC,UAEhBM,EAAO,CAAEP,WAAUC,S,GACpBA,E,KA5BEW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACfa,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEzEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAChBa,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAuCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAExEmB,SAAQ,WACFlB,IAAMN,EAAOyB,MAAQ,GAAGxB,EAAKyB,iBAAiBC,gBAAgB,W,KAnBzExB,EAAMyB,iBACN3B,EAAKyB,iBAAiBG,aAAa,WAAY,IAS/C,IALA,IAAMtB,EAAQuB,OAAOC,SAASnC,EAAW6B,OACnCjB,EAAOsB,OAAOC,SAAShC,EAAU0B,OAI/BO,EAAI,EAAGA,EAAIhC,EAAOyB,MAAOO,IAAGC,EAAAD,E","sources":["src/js/promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst stepDelay = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\n// перешкодження перезавантажуванню браузера\n// блокує в формі останній елемент (сабміт)\n\nform.addEventListener('submit', (event) => {\nevent.preventDefault();\nform.lastElementChild.setAttribute('disabled', '');\n\n// значення інпутів перетворюються на цілі числа\n\nconst delay = Number.parseInt(firstDelay.value);\nconst step = Number.parseInt(stepDelay.value);\n\n// асинхронний цикл, де є кілька варіантів вирішення задачі\n\nfor(let i = 0; i < amount.value; i++) {\n    createPromise(i + 1, delay + step * i)\n    .then(({ position, delay}) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay}) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    .finally(() => {\n        if(i === amount.value - 1) form.lastElementChild.removeAttribute('disabled');\n    })\n}\n});\n\n// функція, яка генерує рандомне вирішення. \n\nfunction createPromise(position, delay) {\nreturn new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n \n    // викликається асинхронну операцію\n    // якщо значення true, то resolve\n// якщо значення false, то reject  \n  \n\nsetTimeout(() => {\n    if (shouldResolve) {\nresolve({ position, delay});\n   }\n    reject({ position, delay});\n}, delay);\n});\n}\n   "],"names":["$ejkSG","parcelRequire","$95b1f5eb58d53a61$var$firstDelay","document","querySelector","$95b1f5eb58d53a61$var$stepDelay","$95b1f5eb58d53a61$var$amount","$95b1f5eb58d53a61$var$form","addEventListener","event","position","delay","i","delay1","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","value","lastElementChild","removeAttribute","preventDefault","setAttribute","Number","parseInt","i1","_loop"],"version":3,"file":"promises.65cbbe35.js.map"}